### This file was generated by Nexus Schema
### Do not make changes to this file directly


scalar DateTime

type Item {
  createdAt: DateTime!
  description: String!
  id: Int!
  image: String
  largeImage: String
  price: Int!
  title: String!
  updatedAt: DateTime
}

input ItemOrderByInput {
  createdAt: OrderBy
}

input ItemWhereUniqueInput {
  id: Int
}

type Mutation {
  createItem(description: String!, image: String, largeImage: String, price: Int!, title: String!): Item!
  deleteItem(id: Int!): Item!
  signin(email: String!, password: String!): User
  signout: SucessMessage
  signup(email: String!, name: String!, password: String!): User
  updateItem(description: String, id: Int!, image: String, largeImage: String, price: Int, title: String): Item!
}

enum OrderBy {
  asc
  desc
}

enum Permission {
  ADMIN
  ITEMCREATE
  ITEMDELETE
  ITEMUPDATE
  PERMISSIONUPDATE
  USER
}

type Query {
  item(where: ItemWhereUniqueInput!): Item
  items(orderBy: ItemOrderByInput, skip: Int, take: Int): [Item!]!
  itemsCount: Int!
  me: User
  user(where: UserWhereUniqueInput!): User
}

type SucessMessage {
  message: String
}

type User {
  email: String!
  id: Int!
  name: String!
  password: String!
  permissions: [Permission!]!
  resetToken: String
  resetTokenExpiry: Float
}

input UserWhereUniqueInput {
  email: String
  id: Int
}
